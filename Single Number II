https://leetcode.com/problems/single-number-ii/description/

https://www.youtube.com/watch?v=cOFAmaMBVps&ab_channel=Techdose
//SORT SOLN


class Solution {
public:
    int singleNumber(vector<int>& arr) {
        int n = arr.size();
        if(n==1)return arr[0];
        sort(arr.begin(),arr.end());
        if(arr[0]!=arr[1])return arr[0];
        if(arr[n-1]!=arr[n-2])return arr[n-1];
        for(int i=1 ; i<n ; i=i+3){
            if(arr[i]!=arr[i-1])return arr[i-1];
        }
        return 0;
    }
};

//counting set bits

class Solution {
public:
    int singleNumber(vector<int>& arr) {
        int n = arr.size();
        bool flag = true;
        vector<int> mem(32,0);
        int count = 0;
        for(int j=1 ; j<=32 ; j++){
            int tempAns = 0;
            for(int i=0 ; i<n ; i++){
                tempAns += arr[i]&1;
                arr[i] = arr[i]>>1;
            }
            mem[count] = tempAns;
            count+=1;
        }
        int ans = 0;
        for(int i=0 ; i<32 ; i++){
            cout<<mem[i]<<" ";
            mem[i] = mem[i]%3;
            if(mem[i]==1){
                ans += 1<<i;
            }
        }
        return ans;
    }
};
